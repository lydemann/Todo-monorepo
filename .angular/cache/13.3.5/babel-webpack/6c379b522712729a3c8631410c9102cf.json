{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { ErrorEffects } from '@todo/shared/data-access-logging';\nimport { environment } from '../environments/environment';\nimport { CustomRouterSerializer } from './router.serilization';\nimport { todoAppReducers } from './todo-app.reducers';\nimport { TodoListStoreModuleModule } from './todo-list/state/todo-list-store.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@ngrx/effects\";\nimport * as i3 from \"@ngrx/store-devtools\";\nimport * as i4 from \"@ngrx/router-store\";\nexport let StateModule = /*#__PURE__*/(() => {\n  class StateModule {\n    constructor(parentModule) {\n      if (parentModule) {\n        throw new Error('StateModule is already loaded. Import it in the AppModule only');\n      }\n    }\n\n    static forRoot() {\n      return {\n        ngModule: StateModule\n      };\n    }\n\n  }\n\n  StateModule.ɵfac = function StateModule_Factory(t) {\n    return new (t || StateModule)(i0.ɵɵinject(StateModule, 12));\n  };\n\n  StateModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: StateModule\n  });\n  StateModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, StoreModule.forRoot(todoAppReducers), EffectsModule.forRoot([ErrorEffects]), StoreDevtoolsModule.instrument({\n      name: 'NgRx Testing Store DevTools',\n      logOnly: environment.production\n    }), StoreRouterConnectingModule.forRoot({\n      serializer: CustomRouterSerializer\n    }), TodoListStoreModuleModule]]\n  });\n  return StateModule;\n})();","map":null,"metadata":{},"sourceType":"module"}