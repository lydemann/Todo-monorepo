{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/button\";\n\nfunction ButtonComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ButtonComponent_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onClick();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.text, \"\\n\");\n  }\n}\n\nfunction ButtonComponent_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ButtonComponent_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onClick();\n    });\n    i0.ɵɵprojection(1, 0, [\"selector\", \"mat-icon\"]);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\n\nconst _c0 = [\"*\"];\nexport let ButtonComponent = /*#__PURE__*/(() => {\n  class ButtonComponent {\n    constructor() {\n      this.iconButton = false;\n      this.text = '';\n      this.disabled = false;\n      this.clicked = new EventEmitter();\n    }\n\n    onClick() {\n      if (!this.disabled) {\n        this.clicked.emit();\n      }\n    }\n\n  }\n\n  ButtonComponent.ɵfac = function ButtonComponent_Factory(t) {\n    return new (t || ButtonComponent)();\n  };\n\n  ButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ButtonComponent,\n    selectors: [[\"app-button\"]],\n    inputs: {\n      iconButton: \"iconButton\",\n      text: \"text\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      clicked: \"clicked\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 2,\n    consts: [[\"mat-button\", \"\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", 3, \"disabled\", \"click\"]],\n    template: function ButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, ButtonComponent_button_0_Template, 2, 2, \"button\", 0);\n        i0.ɵɵtemplate(1, ButtonComponent_button_1_Template, 2, 1, \"button\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.iconButton);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.iconButton);\n      }\n    },\n    directives: [i1.NgIf, i2.MatButton],\n    styles: [\".mat-button[_ngcontent-%COMP%]:focus, .mat-icon-button[_ngcontent-%COMP%]:focus{background-color:var()}.mat-button[_ngcontent-%COMP%]:hover, .mat-icon-button[_ngcontent-%COMP%]:hover{opacity:.5}\"],\n    changeDetection: 0\n  });\n  return ButtonComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}