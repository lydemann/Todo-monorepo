{"ast":null,"code":"import { AbstractControl, NG_VALIDATORS, ValidatorFn } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport function InvalidDateValidator() {\n  return control => {\n    const date = new Date(control.value);\n    const invalidDate = !control.value || date.getMonth === undefined;\n    return invalidDate ? {\n      invalidDate: {\n        value: control.value\n      }\n    } : null;\n  };\n}\nexport let InvalidDateValidatorDirective = /*#__PURE__*/(() => {\n  class InvalidDateValidatorDirective {\n    validate(control) {\n      return this.invalidDate ? InvalidDateValidator()(control) : null;\n    }\n\n  }\n\n  InvalidDateValidatorDirective.ɵfac = function InvalidDateValidatorDirective_Factory(t) {\n    return new (t || InvalidDateValidatorDirective)();\n  };\n\n  InvalidDateValidatorDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: InvalidDateValidatorDirective,\n    selectors: [[\"\", \"appInvalidDate\", \"\"]],\n    inputs: {\n      invalidDate: [\"appInvalidDate\", \"invalidDate\"]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: InvalidDateValidatorDirective,\n      multi: true\n    }])]\n  });\n  return InvalidDateValidatorDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}