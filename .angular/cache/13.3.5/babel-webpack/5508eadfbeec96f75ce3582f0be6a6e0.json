{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/checkbox\";\nexport let CheckboxComponent = /*#__PURE__*/(() => {\n  class CheckboxComponent {\n    constructor() {\n      this.disabled = false;\n      this.checked = false;\n      this.labelPosition = 'after'; // Supports 'before' and 'after'\n\n      this.indeterminate = false; // True renders indeterminate state regardless of checked value. Interactions (e.g. clicking) sets this to false.\n\n      this.change = new EventEmitter();\n    }\n\n    onChanged($event) {\n      this.change.emit($event.checked);\n    }\n\n  }\n\n  CheckboxComponent.ɵfac = function CheckboxComponent_Factory(t) {\n    return new (t || CheckboxComponent)();\n  };\n\n  CheckboxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckboxComponent,\n    selectors: [[\"app-checkbox\"]],\n    inputs: {\n      label: \"label\",\n      disabled: \"disabled\",\n      checked: \"checked\",\n      labelPosition: \"labelPosition\",\n      indeterminate: \"indeterminate\"\n    },\n    outputs: {\n      change: \"change\"\n    },\n    decls: 2,\n    vars: 6,\n    consts: [[3, \"disabled\", \"indeterminate\", \"checked\", \"labelPosition\", \"color\", \"change\"]],\n    template: function CheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-checkbox\", 0);\n        i0.ɵɵlistener(\"change\", function CheckboxComponent_Template_mat_checkbox_change_0_listener($event) {\n          return ctx.onChanged($event);\n        });\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"indeterminate\", ctx.indeterminate)(\"checked\", ctx.checked)(\"labelPosition\", ctx.labelPosition)(\"color\", \"primary\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.label, \"\\n\");\n      }\n    },\n    directives: [i1.MatCheckbox],\n    styles: [\".mat-checkbox-background{border-radius:50%!important}  .mat-checkbox-frame{border-radius:50%!important}  .mat-checkbox-checked .mat-checkbox-checkmark{right:10%;left:10%;top:10%;width:80%;bottom:10%}\"]\n  });\n  return CheckboxComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}