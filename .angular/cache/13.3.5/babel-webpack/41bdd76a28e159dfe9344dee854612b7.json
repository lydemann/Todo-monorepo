{"ast":null,"code":"import { EventEmitter, forwardRef, QueryList, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SelectOptionGroupComponent } from './select-option-group/select-option-group.component';\nimport { SelectOptionComponent } from './select-option/select-option.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/select\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/core\";\n\nfunction SelectComponent_mat_option_2_ng_template_1_Template(rf, ctx) {}\n\nfunction SelectComponent_mat_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 3);\n    i0.ɵɵtemplate(1, SelectComponent_mat_option_2_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", option_r2 == null ? null : option_r2.templateRef);\n  }\n}\n\nfunction SelectComponent_mat_optgroup_3_mat_option_1_ng_template_1_Template(rf, ctx) {}\n\nfunction SelectComponent_mat_optgroup_3_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 3);\n    i0.ɵɵtemplate(1, SelectComponent_mat_optgroup_3_mat_option_1_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", option_r6 == null ? null : option_r6.templateRef);\n  }\n}\n\nfunction SelectComponent_mat_optgroup_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 5);\n    i0.ɵɵtemplate(1, SelectComponent_mat_optgroup_3_mat_option_1_Template, 2, 2, \"mat-option\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", group_r4.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r4.options);\n  }\n}\n\nexport let SelectComponent = /*#__PURE__*/(() => {\n  class SelectComponent {\n    constructor() {\n      this.valueChange = new EventEmitter();\n      this.disabled = false;\n      this.touched = false;\n\n      this.onChange = _ => {\n        /*Empty*/\n      }; // tslint:disable-next-line: no-empty\n\n\n      this.onTouched = _ => {};\n    }\n\n    onSelected($event) {\n      this.selected = $event.value;\n      this.onChange($event.value);\n      this.valueChange.emit($event.value);\n    }\n\n    ngOnChanges(change) {\n      if (change.options) {\n        if (change.options.isFirstChange()) {\n          return;\n        }\n\n        if (change.options.currentValue !== change.options.previousValue) {\n          this.selected = null; // Resetting the model to show placeholder\n\n          this.onChange(null);\n        }\n      }\n    }\n\n    ngAfterContentInit() {\n      this.options = this.getOptions(this.selectOptions);\n      this.optionsGroups = this.getOptionGroups(this.selectOptionGroups);\n      this.selectOptionGroups.changes.subscribe(optionGroups => this.optionsGroups = this.getOptionGroups(optionGroups));\n      this.selectOptions.changes.subscribe(options => this.options = options.length ? this.getOptions(options) : []);\n    } // CONTROL VALUE ACCESSOR\n\n\n    writeValue(value) {\n      this.internalValue = value;\n      this.onChange(this.internalValue);\n      this.valueChange.emit(value);\n      this.selected = value;\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      const self = this;\n\n      this.onTouched = arg => {\n        self.touched = true;\n        fn(arg);\n      };\n    }\n\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n\n    getOptionGroups(list) {\n      return list.length ? list.map(group => ({\n        label: group.label,\n        options: this.getOptions(group.selectOptions)\n      })) : [];\n    }\n\n    getOptions(list) {\n      return list.length ? list.map(item => ({\n        value: item.value,\n        templateRef: item.templateRef\n      })) : [];\n    }\n\n  }\n\n  SelectComponent.ɵfac = function SelectComponent_Factory(t) {\n    return new (t || SelectComponent)();\n  };\n\n  SelectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectComponent,\n    selectors: [[\"app-select\"]],\n    contentQueries: function SelectComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, SelectOptionComponent, 4);\n        i0.ɵɵcontentQuery(dirIndex, SelectOptionGroupComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectOptions = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectOptionGroups = _t);\n      }\n    },\n    inputs: {\n      placeholder: \"placeholder\"\n    },\n    outputs: {\n      valueChange: \"valueChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      // tslint:disable-next-line: no-forward-ref\n      useExisting: forwardRef(() => SelectComponent),\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 5,\n    consts: [[3, \"disabled\", \"placeholder\", \"ngModel\", \"selectionChange\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"label\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [3, \"ngTemplateOutlet\"], [3, \"label\"]],\n    template: function SelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-form-field\")(1, \"mat-select\", 0);\n        i0.ɵɵlistener(\"selectionChange\", function SelectComponent_Template_mat_select_selectionChange_1_listener($event) {\n          return ctx.onSelected($event);\n        })(\"ngModelChange\", function SelectComponent_Template_mat_select_ngModelChange_1_listener($event) {\n          return ctx.selected = $event;\n        });\n        i0.ɵɵtemplate(2, SelectComponent_mat_option_2_Template, 2, 2, \"mat-option\", 1);\n        i0.ɵɵtemplate(3, SelectComponent_mat_optgroup_3_Template, 2, 2, \"mat-optgroup\", 2);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"placeholder\", ctx.placeholder)(\"ngModel\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.options);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.optionsGroups);\n      }\n    },\n    directives: [i1.MatFormField, i2.MatSelect, i3.NgControlStatus, i3.NgModel, i4.NgForOf, i5.MatOption, i4.NgTemplateOutlet, i5.MatOptgroup],\n    styles: [\".mat-form-field[_ngcontent-%COMP%]{width:100%}[_nghost-%COMP%]     .mat-form-field-infix{padding:.4375em}\"]\n  });\n  return SelectComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}