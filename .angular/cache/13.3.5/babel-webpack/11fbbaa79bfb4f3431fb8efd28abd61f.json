{"ast":null,"code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\n\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\n\n\nexports.decode = function (charCode) {\n  var bigA = 65; // 'A'\n\n  var bigZ = 90; // 'Z'\n\n  var littleA = 97; // 'a'\n\n  var littleZ = 122; // 'z'\n\n  var zero = 48; // '0'\n\n  var nine = 57; // '9'\n\n  var plus = 43; // '+'\n\n  var slash = 47; // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52; // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\n  if (bigA <= charCode && charCode <= bigZ) {\n    return charCode - bigA;\n  } // 26 - 51: abcdefghijklmnopqrstuvwxyz\n\n\n  if (littleA <= charCode && charCode <= littleZ) {\n    return charCode - littleA + littleOffset;\n  } // 52 - 61: 0123456789\n\n\n  if (zero <= charCode && charCode <= nine) {\n    return charCode - zero + numberOffset;\n  } // 62: +\n\n\n  if (charCode == plus) {\n    return 62;\n  } // 63: /\n\n\n  if (charCode == slash) {\n    return 63;\n  } // Invalid base64 digit.\n\n\n  return -1;\n};","map":null,"metadata":{},"sourceType":"script"}