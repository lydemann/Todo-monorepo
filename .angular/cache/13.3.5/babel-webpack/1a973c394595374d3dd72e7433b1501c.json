{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/slide-toggle\";\nimport * as i2 from \"@angular/common\";\n\nfunction ToggleComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.labelTextOn);\n  }\n}\n\nfunction ToggleComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.labelTextOff);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-icon\": a0\n  };\n};\n\nexport let ToggleComponent = /*#__PURE__*/(() => {\n  class ToggleComponent {\n    constructor() {\n      this.labelPosition = 'after';\n      this.disabled = false;\n      this.checked = false;\n      this.change = new EventEmitter();\n      this._isIcon = false; // Disable interaction but keep style\n    }\n\n    set isIcon(isIcon) {\n      this.disabled = true;\n      this._isIcon = isIcon;\n    }\n\n    get isIcon() {\n      return this._isIcon;\n    }\n\n    toggleChange(event) {\n      this.checked = event.checked;\n      this.change.emit(event.checked);\n    }\n\n  }\n\n  ToggleComponent.ɵfac = function ToggleComponent_Factory(t) {\n    return new (t || ToggleComponent)();\n  };\n\n  ToggleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ToggleComponent,\n    selectors: [[\"app-toggle\"]],\n    inputs: {\n      isIcon: \"isIcon\",\n      labelPosition: \"labelPosition\",\n      labelTextOn: \"labelTextOn\",\n      labelTextOff: \"labelTextOff\",\n      disabled: \"disabled\",\n      checked: \"checked\"\n    },\n    outputs: {\n      change: \"change\"\n    },\n    decls: 3,\n    vars: 9,\n    consts: [[\"color\", \"primary\", 3, \"disabled\", \"labelPosition\", \"checked\", \"ngClass\", \"change\"], [4, \"ngIf\"]],\n    template: function ToggleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-slide-toggle\", 0);\n        i0.ɵɵlistener(\"change\", function ToggleComponent_Template_mat_slide_toggle_change_0_listener($event) {\n          return ctx.toggleChange($event);\n        });\n        i0.ɵɵtemplate(1, ToggleComponent_span_1_Template, 2, 1, \"span\", 1);\n        i0.ɵɵtemplate(2, ToggleComponent_span_2_Template, 2, 1, \"span\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"labelPosition\", ctx.labelPosition)(\"checked\", ctx.checked)(\"labelPosition\", ctx.labelposition)(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.isIcon));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.checked);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.checked);\n      }\n    },\n    directives: [i1.MatSlideToggle, i2.NgClass, i2.NgIf],\n    styles: [\"[_nghost-%COMP%]  .mat-slide-toggle-label{color:inherit;font-size:inherit}[_nghost-%COMP%]  .mat-slide-toggle-label .mat-slide-toggle-content{font:inherit}[_nghost-%COMP%]  .is-icon.mat-disabled .mat-slide-toggle-label{cursor:inherit}[_nghost-%COMP%]  .is-icon.mat-disabled .mat-slide-toggle-thumb-container{cursor:inherit}[_nghost-%COMP%]  .is-icon.mat-disabled .mat-slide-toggle-thumb{background-color:#fafafa}[_nghost-%COMP%]  .is-icon.mat-disabled .mat-slide-toggle-bar{background-color:#00000061}[_nghost-%COMP%]  .is-icon.mat-disabled.mat-checked .mat-slide-toggle-thumb{background-color:#7da3ad}[_nghost-%COMP%]  .is-icon.mat-disabled.mat-checked .mat-slide-toggle-bar{background-color:#7da3ad80}\"]\n  });\n  return ToggleComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}