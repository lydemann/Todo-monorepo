{"ast":null,"code":"import { Store } from '@ngrx/store';\nimport { TodoListActions } from './state/todo-list.actions';\nimport { selectCompletedTodos, selectIsLoading, selectIsSavingTodo, selectSelectedTodoItem, selectTodoList } from './state/todo-list.selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport let TodoListSandboxService = /*#__PURE__*/(() => {\n  class TodoListSandboxService {\n    constructor(store) {\n      this.store = store;\n      this.isLoading$ = this.store.select(selectIsLoading);\n      this.selectedTodo$ = this.store.select(selectSelectedTodoItem);\n      this.completedTodos$ = this.store.select(selectCompletedTodos);\n      this.isSavingTodo$ = this.store.select(selectIsSavingTodo);\n      this.todoList$ = this.store.select(selectTodoList);\n    }\n\n    todoCompletedToggled(todoId) {\n      this.store.dispatch(TodoListActions.toggleCompleteTodoItem({\n        todoItemId: todoId\n      }));\n    }\n\n    selectTodoForEdit(todoItem) {\n      this.store.dispatch(TodoListActions.selectTodoForEdit({\n        todoItem\n      }));\n    }\n\n    saveTodoItem(todoItem) {\n      this.store.dispatch(TodoListActions.saveTodoItemRequest({\n        todoItem: Object.assign({}, todoItem)\n      }));\n    }\n    /**\n     * loadTodoList\n     */\n\n\n    loadTodoList() {\n      this.store.dispatch(TodoListActions.getTodoListRequest());\n    }\n    /**\n     * deleteTodo\n     */\n\n\n    deleteTodo(id) {\n      this.store.dispatch(TodoListActions.deleteTodoItem({\n        todoItemId: id\n      }));\n    }\n\n  }\n\n  TodoListSandboxService.ɵfac = function TodoListSandboxService_Factory(t) {\n    return new (t || TodoListSandboxService)(i0.ɵɵinject(i1.Store));\n  };\n\n  TodoListSandboxService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoListSandboxService,\n    factory: TodoListSandboxService.ɵfac,\n    providedIn: 'root'\n  });\n  return TodoListSandboxService;\n})();","map":null,"metadata":{},"sourceType":"module"}