{"ast":null,"code":"import { ApplicationRef, ChangeDetectorRef, SimpleChanges } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let CDInputDirective = /*#__PURE__*/(() => {\n  class CDInputDirective {\n    constructor(changeDetectionRef, applicationRef) {\n      this.changeDetectionRef = changeDetectionRef;\n      this.applicationRef = applicationRef;\n    }\n\n    ngOnChanges(changes) {\n      this.runCD();\n    }\n\n    runCD() {\n      this.applicationRef.tick();\n      this.changeDetectionRef.detectChanges();\n    }\n\n  }\n\n  CDInputDirective.ɵfac = function CDInputDirective_Factory(t) {\n    return new (t || CDInputDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n  };\n\n  CDInputDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: CDInputDirective,\n    selectors: [[\"\", \"appCDTrigger\", \"\"]],\n    hostBindings: function CDInputDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CDInputDirective_click_HostBindingHandler($event) {\n          return ctx.runCD($event);\n        })(\"change\", function CDInputDirective_change_HostBindingHandler($event) {\n          return ctx.runCD($event);\n        });\n      }\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return CDInputDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}