{"ast":null,"code":"import { FeatureStoreAnonymizer } from '@todo/shared/data-access-logging';\nimport { todoListAdapter } from './todo-list.model';\nimport { selectTodoList } from './todo-list.selector';\nimport * as i0 from \"@angular/core\";\nexport let TodoListAnonymizer = /*#__PURE__*/(() => {\n  class TodoListAnonymizer extends FeatureStoreAnonymizer {\n    getFeatureStateName() {\n      return 'todoList';\n    }\n\n    anonymizeFeatureState(featureState) {\n      const todos = selectTodoList.projector(featureState);\n      const anonymizedState = todoListAdapter.map(todo => Object.assign(Object.assign({}, todo), {\n        title: '',\n        description: ''\n      }), featureState);\n      featureState.entities = anonymizedState.entities;\n      featureState.ids = anonymizedState.ids;\n    }\n\n  }\n\n  TodoListAnonymizer.ɵfac = /*@__PURE__*/function () {\n    let ɵTodoListAnonymizer_BaseFactory;\n    return function TodoListAnonymizer_Factory(t) {\n      return (ɵTodoListAnonymizer_BaseFactory || (ɵTodoListAnonymizer_BaseFactory = i0.ɵɵgetInheritedFactory(TodoListAnonymizer)))(t || TodoListAnonymizer);\n    };\n  }();\n\n  TodoListAnonymizer.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoListAnonymizer,\n    factory: TodoListAnonymizer.ɵfac\n  });\n  return TodoListAnonymizer;\n})();","map":null,"metadata":{},"sourceType":"module"}