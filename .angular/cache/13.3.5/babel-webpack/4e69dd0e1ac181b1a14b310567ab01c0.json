{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nlet MatCardContent = /*#__PURE__*/(() => {\n  class MatCardContent {}\n\n  MatCardContent.ɵfac = function MatCardContent_Factory(t) {\n    return new (t || MatCardContent)();\n  };\n\n  MatCardContent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardContent,\n    selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]],\n    hostAttrs: [1, \"mat-card-content\"]\n  });\n  return MatCardContent;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nlet MatCardTitle = /*#__PURE__*/(() => {\n  class MatCardTitle {}\n\n  MatCardTitle.ɵfac = function MatCardTitle_Factory(t) {\n    return new (t || MatCardTitle)();\n  };\n\n  MatCardTitle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardTitle,\n    selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n    hostAttrs: [1, \"mat-card-title\"]\n  });\n  return MatCardTitle;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nlet MatCardSubtitle = /*#__PURE__*/(() => {\n  class MatCardSubtitle {}\n\n  MatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) {\n    return new (t || MatCardSubtitle)();\n  };\n\n  MatCardSubtitle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardSubtitle,\n    selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n    hostAttrs: [1, \"mat-card-subtitle\"]\n  });\n  return MatCardSubtitle;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nlet MatCardActions = /*#__PURE__*/(() => {\n  class MatCardActions {\n    constructor() {\n      /** Position of the actions inside the card. */\n      this.align = 'start';\n    }\n\n  }\n\n  MatCardActions.ɵfac = function MatCardActions_Factory(t) {\n    return new (t || MatCardActions)();\n  };\n\n  MatCardActions.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardActions,\n    selectors: [[\"mat-card-actions\"]],\n    hostAttrs: [1, \"mat-card-actions\"],\n    hostVars: 2,\n    hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      align: \"align\"\n    },\n    exportAs: [\"matCardActions\"]\n  });\n  return MatCardActions;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nlet MatCardFooter = /*#__PURE__*/(() => {\n  class MatCardFooter {}\n\n  MatCardFooter.ɵfac = function MatCardFooter_Factory(t) {\n    return new (t || MatCardFooter)();\n  };\n\n  MatCardFooter.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardFooter,\n    selectors: [[\"mat-card-footer\"]],\n    hostAttrs: [1, \"mat-card-footer\"]\n  });\n  return MatCardFooter;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardImage = /*#__PURE__*/(() => {\n  class MatCardImage {}\n\n  MatCardImage.ɵfac = function MatCardImage_Factory(t) {\n    return new (t || MatCardImage)();\n  };\n\n  MatCardImage.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardImage,\n    selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n    hostAttrs: [1, \"mat-card-image\"]\n  });\n  return MatCardImage;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardSmImage = /*#__PURE__*/(() => {\n  class MatCardSmImage {}\n\n  MatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) {\n    return new (t || MatCardSmImage)();\n  };\n\n  MatCardSmImage.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardSmImage,\n    selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n    hostAttrs: [1, \"mat-card-sm-image\"]\n  });\n  return MatCardSmImage;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardMdImage = /*#__PURE__*/(() => {\n  class MatCardMdImage {}\n\n  MatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) {\n    return new (t || MatCardMdImage)();\n  };\n\n  MatCardMdImage.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardMdImage,\n    selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n    hostAttrs: [1, \"mat-card-md-image\"]\n  });\n  return MatCardMdImage;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardLgImage = /*#__PURE__*/(() => {\n  class MatCardLgImage {}\n\n  MatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) {\n    return new (t || MatCardLgImage)();\n  };\n\n  MatCardLgImage.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardLgImage,\n    selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n    hostAttrs: [1, \"mat-card-lg-image\"]\n  });\n  return MatCardLgImage;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardXlImage = /*#__PURE__*/(() => {\n  class MatCardXlImage {}\n\n  MatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) {\n    return new (t || MatCardXlImage)();\n  };\n\n  MatCardXlImage.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardXlImage,\n    selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n    hostAttrs: [1, \"mat-card-xl-image\"]\n  });\n  return MatCardXlImage;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nlet MatCardAvatar = /*#__PURE__*/(() => {\n  class MatCardAvatar {}\n\n  MatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) {\n    return new (t || MatCardAvatar)();\n  };\n\n  MatCardAvatar.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardAvatar,\n    selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n    hostAttrs: [1, \"mat-card-avatar\"]\n  });\n  return MatCardAvatar;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n\n\nlet MatCard = /*#__PURE__*/(() => {\n  class MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n      this._animationMode = _animationMode;\n    }\n\n  }\n\n  MatCard.ɵfac = function MatCard_Factory(t) {\n    return new (t || MatCard)(i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatCard.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCard,\n    selectors: [[\"mat-card\"]],\n    hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"],\n    hostVars: 2,\n    hostBindings: function MatCard_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      }\n    },\n    exportAs: [\"matCard\"],\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 0,\n    template: function MatCard_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵprojection(0);\n        i0.ɵɵprojection(1, 1);\n      }\n    },\n    styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px;display:block;overflow:hidden}.mat-card-image img{width:100%}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatCard;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n\n\nlet MatCardHeader = /*#__PURE__*/(() => {\n  class MatCardHeader {}\n\n  MatCardHeader.ɵfac = function MatCardHeader_Factory(t) {\n    return new (t || MatCardHeader)();\n  };\n\n  MatCardHeader.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCardHeader,\n    selectors: [[\"mat-card-header\"]],\n    hostAttrs: [1, \"mat-card-header\"],\n    ngContentSelectors: _c3,\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"mat-card-header-text\"]],\n    template: function MatCardHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵprojection(0);\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatCardHeader;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n\n\nlet MatCardTitleGroup = /*#__PURE__*/(() => {\n  class MatCardTitleGroup {}\n\n  MatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) {\n    return new (t || MatCardTitleGroup)();\n  };\n\n  MatCardTitleGroup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCardTitleGroup,\n    selectors: [[\"mat-card-title-group\"]],\n    hostAttrs: [1, \"mat-card-title-group\"],\n    ngContentSelectors: _c5,\n    decls: 4,\n    vars: 0,\n    template: function MatCardTitleGroup_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatCardTitleGroup;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nlet MatCardModule = /*#__PURE__*/(() => {\n  class MatCardModule {}\n\n  MatCardModule.ɵfac = function MatCardModule_Factory(t) {\n    return new (t || MatCardModule)();\n  };\n\n  MatCardModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatCardModule\n  });\n  MatCardModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[MatCommonModule], MatCommonModule]\n  });\n  return MatCardModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage }; //# sourceMappingURL=card.mjs.map","map":null,"metadata":{},"sourceType":"module"}