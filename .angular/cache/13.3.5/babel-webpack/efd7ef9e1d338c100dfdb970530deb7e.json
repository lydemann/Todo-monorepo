{"ast":null,"code":"/**\n * This file contains an action creator for throwing errors\n * It is inspired from the `createAction` in NgRx https://github.com/ngrx/platform/blob/master/modules/store/src/action_creator.ts\n *  Example:\n *  ```\n *  export const getPaperSearchFailed = createErrorAction(\n      PaperSearchActionTypes.GetPaperSearchFailed,\n      errorProps<{ error: ErrorDetails }>(),\n      {\n          showNotification: false,\n      }\n    );\n * ```\n */\nexport const IS_ERROR_ACTION = '_isError';\nexport class ErrorAction {}\nexport function errorProps() {\n  // the return type does not match TypePropertyIsNotAllowed, so double casting\n  // is used.\n  // tslint:disable-next-line: no-non-null-assertion\n  return {\n    _as: 'props',\n    _p: undefined\n  };\n}\nexport function createErrorAction(type, config, errorConfig = {\n  showNotification: true\n}) {\n  const showNotification = errorConfig.showNotification !== undefined ? errorConfig.showNotification : true;\n\n  if (typeof config === 'function') {\n    return defineErrorType(type, (...args) => Object.assign(Object.assign({}, config(...args)), {\n      type,\n      showNotification,\n      [IS_ERROR_ACTION]: true\n    }));\n  }\n\n  const as = config ? config._as : 'empty';\n\n  switch (as) {\n    case 'empty':\n      return defineErrorType(type, () => ({\n        type,\n        [IS_ERROR_ACTION]: true,\n        showNotification\n      }));\n\n    case 'props':\n      return defineErrorType(type, props => Object.assign(Object.assign({}, props), {\n        type,\n        [IS_ERROR_ACTION]: true,\n        showNotification\n      }));\n\n    default:\n      throw new Error('Unexpected config.');\n  }\n}\n\nfunction defineErrorType(type, creator) {\n  const newCreator = Object.defineProperty(creator, IS_ERROR_ACTION, {\n    value: true,\n    writable: false\n  });\n  return Object.defineProperty(newCreator, 'type', {\n    value: type,\n    writable: false\n  });\n}\n\nconst arraysAreNotAllowedMsg = 'arrays are not allowed in action creators';\nconst typePropertyIsNotAllowedMsg = 'type property is not allowed in error action creators';\nconst isErrorPropertyIsNotAllowedMsg = `${IS_ERROR_ACTION} property is not allowed in error action creators`;","map":null,"metadata":{},"sourceType":"module"}