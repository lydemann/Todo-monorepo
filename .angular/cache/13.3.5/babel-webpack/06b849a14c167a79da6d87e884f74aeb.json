{"ast":null,"code":"import { ApplicationRef, ChangeDetectorRef, EventEmitter, SimpleChanges } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { TodoItem } from '@todo/shared/todo-interfaces';\nimport { InvalidDateValidator } from '../../form-validation/invalid-date.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"../../elements-helpers/cd-input.directive\";\nimport * as i5 from \"../../date-picker/date-picker.component\";\nimport * as i6 from \"../../buttons/square-button/square-button.component\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../spinner/spinner.component\";\nimport * as i9 from \"@ngx-translate/core\";\n\nfunction AddTodoReactiveFormsComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 3, 4);\n    i0.ɵɵlistener(\"ngSubmit\", function AddTodoReactiveFormsComponent_ng_template_5_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n\n      const _r3 = i0.ɵɵreference(1);\n\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.save(_r3);\n    });\n    i0.ɵɵelementStart(2, \"div\")(3, \"mat-form-field\", 5);\n    i0.ɵɵelement(4, \"input\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\")(6, \"mat-form-field\", 5);\n    i0.ɵɵelement(7, \"input\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 8)(9, \"span\", 9);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\");\n    i0.ɵɵelement(13, \"app-date-picker\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"app-square-button\", 11);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"translate\");\n    i0.ɵɵpipe(17, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.addTodoForm);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 5, ctx_r1.dueDateText));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"buttonType\", \"Primary\")(\"type\", \"submit\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", !ctx_r1._currentTODO.id ? i0.ɵɵpipeBind1(16, 7, ctx_r1.createText) : i0.ɵɵpipeBind1(17, 9, ctx_r1.saveText), \" \");\n  }\n}\n\nfunction AddTodoReactiveFormsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"app-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AddTodoReactiveFormsComponent = /*#__PURE__*/(() => {\n  class AddTodoReactiveFormsComponent {\n    constructor(formBuilder, changeDetectionRef, applicationRef) {\n      this.formBuilder = formBuilder;\n      this.changeDetectionRef = changeDetectionRef;\n      this.applicationRef = applicationRef;\n      this.headlineText = 'add-todo.headline';\n      this.dueDateText = 'add-todo.due-date';\n      this.createText = 'add-todo.create';\n      this.saveText = 'add-todo.save';\n      this.addTodoForm = this.formBuilder.group({\n        title: ['', Validators.required],\n        description: ['', Validators.required],\n        dueDate: ['', [Validators.required, InvalidDateValidator]]\n      });\n      this.saveTodo = new EventEmitter();\n      this._currentTODO = new TodoItem('', '');\n    }\n\n    set currentTodo(todoItem) {\n      this._currentTODO = Object.assign({}, todoItem);\n      this.addTodoForm.patchValue(Object.assign({}, todoItem));\n    }\n\n    get currentTodo() {\n      return this._currentTODO;\n    }\n\n    save(form) {\n      if (!form.valid) {\n        // tslint:disable-next-line: no-console\n        console.error('Invalid form!');\n        return;\n      }\n\n      this.saveTodo.next(this.addTodoForm.value);\n      form.resetForm();\n      this.changeDetectionRef.detectChanges();\n    }\n\n    ngOnChanges(changes) {\n      this.changeDetectionRef.detectChanges();\n    }\n\n    runCD() {\n      this.applicationRef.tick();\n      this.changeDetectionRef.detectChanges();\n    }\n\n  }\n\n  AddTodoReactiveFormsComponent.ɵfac = function AddTodoReactiveFormsComponent_Factory(t) {\n    return new (t || AddTodoReactiveFormsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n  };\n\n  AddTodoReactiveFormsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTodoReactiveFormsComponent,\n    selectors: [[\"app-add-todo-reactive-forms\"]],\n    hostBindings: function AddTodoReactiveFormsComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keyup\", function AddTodoReactiveFormsComponent_keyup_HostBindingHandler($event) {\n          return ctx.runCD($event);\n        })(\"click\", function AddTodoReactiveFormsComponent_click_HostBindingHandler($event) {\n          return ctx.runCD($event);\n        })(\"change\", function AddTodoReactiveFormsComponent_change_HostBindingHandler($event) {\n          return ctx.runCD($event);\n        });\n      }\n    },\n    inputs: {\n      headlineText: \"headlineText\",\n      dueDateText: \"dueDateText\",\n      createText: \"createText\",\n      saveText: \"saveText\",\n      isSavingTodo: \"isSavingTodo\",\n      currentTodo: \"currentTodo\"\n    },\n    outputs: {\n      saveTodo: \"saveTodo\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 8,\n    vars: 5,\n    consts: [[1, \"mx-auto\", \"col-10\"], [\"todoForm\", \"\"], [\"class\", \"relative\", 4, \"ngIf\", \"ngIfElse\"], [3, \"formGroup\", \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"field\"], [\"type\", \"text\", \"formControlName\", \"title\", \"matInput\", \"\", \"appCDTrigger\", \"\", \"name\", \"todo-title\", \"data-test\", \"todo-title\", \"id\", \"todo-title\", \"placeholder\", \"Enter title\"], [\"type\", \"text\", \"required\", \"\", \"appCDTrigger\", \"\", \"matInput\", \"\", \"name\", \"todo-description\", \"formControlName\", \"description\", \"data-test\", \"todo-description\", \"id\", \"todo-description\", \"placeholder\", \"Enter description\"], [1, \"form-group\"], [\"for\", \"todo-due-date\"], [\"name\", \"todo-due-date\", \"formControlName\", \"dueDate\", \"appCDTrigger\", \"\", \"data-test\", \"todo-duedate\", \"placeholder\", \"Enter due date\"], [\"data-test\", \"create-todo-submit\", \"appCDTrigger\", \"\", 3, \"buttonType\", \"type\"], [1, \"relative\"]],\n    template: function AddTodoReactiveFormsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h5\");\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"hr\");\n        i0.ɵɵtemplate(5, AddTodoReactiveFormsComponent_ng_template_5_Template, 18, 11, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(7, AddTodoReactiveFormsComponent_div_7_Template, 2, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(6);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 3, ctx.headlineText));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSavingTodo)(\"ngIfElse\", _r0);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.MatFormField, i1.DefaultValueAccessor, i3.MatInput, i1.NgControlStatus, i1.FormControlName, i4.CDInputDirective, i1.RequiredValidator, i5.DatePickerComponent, i6.SquareButtonComponent, i7.NgIf, i8.SpinnerComponent],\n    pipes: [i9.TranslatePipe],\n    styles: [\".relative[_ngcontent-%COMP%]{position:relative}.field[_ngcontent-%COMP%]{width:100%;max-width:500px}\"]\n  });\n  return AddTodoReactiveFormsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}