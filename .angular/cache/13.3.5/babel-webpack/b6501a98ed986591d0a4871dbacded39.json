{"ast":null,"code":"import { Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { SpinnerOverlayComponent } from '@todo-app/core/spinner-overlay/spinner-overlay.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/overlay\";\nexport let SpinnerOverlayService = /*#__PURE__*/(() => {\n  class SpinnerOverlayService {\n    constructor(overlay) {\n      this.overlay = overlay;\n      this.overlayRef = null;\n    }\n\n    show(message = '') {\n      // Returns an OverlayRef (which is a PortalHost)\n      if (!this.overlayRef) {\n        this.overlayRef = this.overlay.create();\n      } // Create ComponentPortal that can be attached to a PortalHost\n\n\n      const spinnerOverlayPortal = new ComponentPortal(SpinnerOverlayComponent); // run in async context for triggering \"tick\", thus avoid ExpressionChangedAfterItHasBeenCheckedError\n\n      setTimeout(() => {\n        const component = this.overlayRef.attach(spinnerOverlayPortal); // Attach ComponentPortal to PortalHost\n        // TODO: set message\n        // component.instance.message = message;\n      });\n    }\n\n    hide() {\n      if (!!this.overlayRef) {\n        this.overlayRef.detach();\n      }\n    }\n\n  }\n\n  SpinnerOverlayService.ɵfac = function SpinnerOverlayService_Factory(t) {\n    return new (t || SpinnerOverlayService)(i0.ɵɵinject(i1.Overlay));\n  };\n\n  SpinnerOverlayService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SpinnerOverlayService,\n    factory: SpinnerOverlayService.ɵfac,\n    providedIn: 'root'\n  });\n  return SpinnerOverlayService;\n})();","map":null,"metadata":{},"sourceType":"module"}