{"ast":null,"code":"import { ErrorHandler } from '@angular/core';\nimport { Actions, createEffect } from '@ngrx/effects';\nimport { filter, tap } from 'rxjs/operators';\nimport { GlobalErrorHandler } from '../global-error-handler/global-error-handler.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../global-error-handler/global-error-handler.service\";\nexport let ErrorEffects = /*#__PURE__*/(() => {\n  class ErrorEffects {\n    constructor(actions$, globalErrorHandler) {\n      this.actions$ = actions$;\n      this.globalErrorHandler = globalErrorHandler;\n      this.handleError$ = createEffect(() => this.actions$.pipe(filter(action => action._isError), tap(action => {\n        this.globalErrorHandler.handleError(action.error, action.showNotification);\n      })), {\n        dispatch: false\n      });\n    }\n\n  }\n\n  ErrorEffects.ɵfac = function ErrorEffects_Factory(t) {\n    return new (t || ErrorEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(ErrorHandler));\n  };\n\n  ErrorEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorEffects,\n    factory: ErrorEffects.ɵfac,\n    providedIn: 'root'\n  });\n  return ErrorEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}